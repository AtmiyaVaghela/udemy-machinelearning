cd..
e:
exit
exit()
setwd(c:)
setwd('E:')
getwd()
setwd("E:/")
getwd(())
getwd()
setwd("E:/Atmiya/ML/Udemy/udemy-machinelearning/Part 1 - Data Preprocessing")
dataset$Age = ifelse(is.na(dataset.$Age),
ave(dataset$Age,FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age
)
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Data.csv')
#taking care of missing data
dataset$Age = ifelse(is.na(dataset.$Age),
ave(dataset$Age,FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age
)
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Data.csv')
#taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age,FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age
)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age,FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary,FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
View(dataset)
View(dataset)
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
View(dataset)
dataset$Purchased = factor(dataset$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
View(dataset)
View(dataset)
install.packages('caTools')
test_set = subset(dataset, split == FALSE)
test_set = subset(dataset, split == FALSE)
test_set = subset(dataset, split == FALSE)
View(dataset)
View(dataset)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(dataset)
View(test_set)
View(training_set)
training_set = scale(training_set)
test_set = scale(test_set)
View(test_set)
View(training_set)
# Feature Scaling
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
View(test_set)
View(training_set)
View(training_set)
View(training_set)
View(test_set)
